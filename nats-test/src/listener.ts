import nats from "node-nats-streaming";
import { randomBytes } from "crypto";

import TIcketCreatedListener from "./events/ticket-created-listener";

console.clear();

const stan = nats.connect("ticketing", randomBytes(4).toString("hex"), {
  url: "http://localhost:4222",
});

stan.on("connect", () => {
  console.log("Listener connected to NATS");

  stan.on("close", () => {
    console.log("NATS connection closed!");

    process.exit();
  });

  new TIcketCreatedListener(stan).listen();
});

// SIGTERM and SIGINT is unix process. this will not work in commands
// SIGINT is generated by the user pressing Ctrl+C and is an interrupt
process.on("SIGINT", () => stan.close());

// SIGTERM is a signal that is sent to request the process terminates. The kill command sends a SIGTERM and it's a terminate
process.on("SIGTERM", () => stan.close());
